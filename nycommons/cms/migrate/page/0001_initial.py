# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-09 20:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import feincms.contrib.fields
import feincms.contrib.richtext
import feincms.extensions
import feincms.module.extensions.datepublisher
import feincms.module.medialibrary.fields
import feincms.module.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        ('medialibrary', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameters', feincms.contrib.fields.JSONField(editable=False, null=True)),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('urlconf_path', models.CharField(choices=[(b'extraadmin.cms_urls', 'Extra admin functions'), (b'pathways.urls', 'Pathways'), (b'elephantblog.urls', 'Blog'), (b'contact_form', 'Contact form'), (b'livinglots_lots.map_urls', 'Lots map')], max_length=100, verbose_name='application')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'application contents',
                'db_table': 'page_page_applicationcontent',
                'verbose_name': 'application content',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='CollapsibleSectionContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', feincms.contrib.richtext.RichTextField(blank=True, verbose_name='text')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('start_collapsed', models.BooleanField(default=False, verbose_name='start collapsed')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'collapsible sections',
                'db_table': 'page_page_collapsiblesectioncontent',
                'verbose_name': 'collapsible section',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ExternallyLinkedMediaFileContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('external_url', models.URLField(blank=True, null=True, verbose_name='external url')),
                ('mediafile', feincms.module.medialibrary.fields.MediaFileForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='medialibrary.MediaFile', verbose_name='media file')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'externally linked media files',
                'db_table': 'page_page_externallylinkedmediafilecontent',
                'verbose_name': 'externally linked media file',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='MailchimpSignup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header_text', models.CharField(max_length=50, verbose_name='header text')),
                ('button_text', models.CharField(max_length=50, verbose_name='button text')),
                ('user_id', models.CharField(help_text='Provided when generating an embed code (u parameter)', max_length=50, verbose_name='Mailchimp user id')),
                ('list_id', models.CharField(help_text='Provided under List > Settings > Unique id', max_length=50, verbose_name='Mailchimp list id')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'Mailchimp signup',
                'db_table': 'page_page_mailchimpsignup',
                'verbose_name': 'Mailchimp signup',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='MediaFileContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('type', models.CharField(choices=[(b'default', 'default')], default=b'default', max_length=20, verbose_name='type')),
                ('mediafile', feincms.module.medialibrary.fields.MediaFileForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='medialibrary.MediaFile', verbose_name='media file')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'media files',
                'db_table': 'page_page_mediafilecontent',
                'verbose_name': 'media file',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('title', models.CharField(help_text='This title is also used for navigation menu items.', max_length=200, verbose_name='title')),
                ('slug', models.SlugField(help_text='This is used to build the URL for this page', max_length=150, verbose_name='slug')),
                ('in_navigation', models.BooleanField(default=False, verbose_name='in navigation')),
                ('override_url', models.CharField(blank=True, help_text="Override the target URL. Be sure to include slashes at the beginning and at the end if it is a local URL. This affects both the navigation and subpages' URLs.", max_length=255, verbose_name='override URL')),
                ('redirect_to', models.CharField(blank=True, help_text='Target URL for automatic redirects or the primary key of a page.', max_length=255, verbose_name='redirect to')),
                ('_cached_url', models.CharField(blank=True, db_index=True, default='', editable=False, max_length=255, verbose_name='Cached URL')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('publication_date', models.DateTimeField(default=feincms.module.extensions.datepublisher.granular_now, verbose_name='publication date')),
                ('publication_end_date', models.DateTimeField(blank=True, help_text='Leave empty if the entry should stay active forever.', null=True, verbose_name='publication end date')),
                ('language', models.CharField(choices=[(b'en', b'English'), (b'es', b'Spanish')], default=b'en', max_length=10, verbose_name='language')),
                ('template_key', models.CharField(choices=[(b'base.html', 'Standard template'), (b'map.html', 'Map template')], default=b'base.html', max_length=255, verbose_name='template')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='page.Page', verbose_name='Parent')),
                ('permissions', models.ManyToManyField(blank=True, null=True, to='auth.Permission', verbose_name='permissions')),
                ('translation_of', models.ForeignKey(blank=True, help_text='Leave this empty for entries in the primary language.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='page.Page', verbose_name='translation of')),
            ],
            options={
                'ordering': ['tree_id', 'lft'],
                'verbose_name': 'page',
                'verbose_name_plural': 'pages',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin, feincms.module.mixins.ContentModelMixin),
        ),
        migrations.CreateModel(
            name='PathwayListContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pathwaylistcontent_set', to='page.Page')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'Pathway list',
                'db_table': 'page_page_pathwaylistcontent',
                'verbose_name': 'Pathway list',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='RecentActivitiesContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recentactivitiescontent_set', to='page.Page')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'recent activity lists',
                'db_table': 'page_page_recentactivitiescontent',
                'verbose_name': 'recent activity list',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='RichTextContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', feincms.contrib.richtext.RichTextField(blank=True, verbose_name='text')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='richtextcontent_set', to='page.Page')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'rich texts',
                'db_table': 'page_page_richtextcontent',
                'verbose_name': 'rich text',
                'permissions': [],
            },
        ),
        migrations.AddField(
            model_name='mediafilecontent',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mediafilecontent_set', to='page.Page'),
        ),
        migrations.AddField(
            model_name='mailchimpsignup',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mailchimpsignup_set', to='page.Page'),
        ),
        migrations.AddField(
            model_name='externallylinkedmediafilecontent',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='externallylinkedmediafilecontent_set', to='page.Page'),
        ),
        migrations.AddField(
            model_name='collapsiblesectioncontent',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collapsiblesectioncontent_set', to='page.Page'),
        ),
        migrations.AddField(
            model_name='applicationcontent',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicationcontent_set', to='page.Page'),
        ),
    ]
