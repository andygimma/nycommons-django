# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-08-13 15:57
from __future__ import unicode_literals

import caching.base
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import feincms.contrib.richtext
import feincms.extensions.base
import feincms.module.medialibrary.fields
import livinglots_pathways.cms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('owners', '0001_initial'),
        ('medialibrary', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MediaFileContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('type', models.CharField(choices=[(b'default', 'default')], default=b'default', max_length=20, verbose_name='type')),
                ('mediafile', feincms.module.medialibrary.fields.MediaFileForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='medialibrary.MediaFile', verbose_name='media file')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'media files',
                'db_table': 'reviewpathways_reviewpathway_mediafilecontent',
                'verbose_name': 'media file',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ReviewPathway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('slug', models.SlugField(max_length=256, verbose_name='slug')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('order', models.PositiveIntegerField(default=10)),
                ('private_owners', models.BooleanField(default=False, help_text='This pathway applies to lots with private owners.', verbose_name='private owners')),
                ('public_owners', models.BooleanField(default=False, help_text='This pathway applies to lots with public owners.', verbose_name='public owners')),
                ('language', models.CharField(choices=[(b'en', b'English'), (b'es', b'Spanish')], default=b'en', max_length=10, verbose_name='language')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('specific_private_owners', models.ManyToManyField(blank=True, help_text='This pathway applies to lots with these private owners.', related_name='_reviewpathway_specific_private_owners_+', to='owners.Owner')),
                ('specific_public_owners', models.ManyToManyField(blank=True, help_text='This pathway applies to lots with these public owners.', related_name='_reviewpathway_specific_public_owners_+', to='owners.Owner')),
                ('translation_of', models.ForeignKey(blank=True, help_text='Leave this empty for entries in the primary language.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='reviewpathways.ReviewPathway', verbose_name='translation of')),
            ],
            options={
                'ordering': ('order', 'name'),
                'abstract': False,
            },
            bases=(caching.base.CachingMixin, livinglots_pathways.cms.PathwayFeinCMSMixin, models.Model, feincms.extensions.base.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='RichTextContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('text', feincms.contrib.richtext.RichTextField(blank=True, verbose_name='text')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='richtextcontent_set', to='reviewpathways.ReviewPathway')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'rich texts',
                'db_table': 'reviewpathways_reviewpathway_richtextcontent',
                'verbose_name': 'rich text',
                'permissions': [],
            },
        ),
        migrations.AddField(
            model_name='mediafilecontent',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mediafilecontent_set', to='reviewpathways.ReviewPathway'),
        ),
    ]
