# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-08-09 16:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import feincms.contrib.richtext
import feincms.extensions.base
import feincms.module.medialibrary.fields
import feincms.module.mixins
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('medialibrary', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', models.SlugField(help_text='This will be automatically generated from the name', max_length=255, unique=True, verbose_name='slug')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
            ],
            options={
                'ordering': ['title'],
                'abstract': False,
                'verbose_name': 'article',
                'verbose_name_plural': 'articles',
            },
            bases=(feincms.module.mixins.ContentModelMixin, models.Model, feincms.extensions.base.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='MediaFileContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('type', models.CharField(choices=[(b'default', 'default')], default=b'default', max_length=20, verbose_name='type')),
                ('mediafile', feincms.module.medialibrary.fields.MediaFileForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='medialibrary.MediaFile', verbose_name='media file')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mediafilecontent_set', to='articles.Article')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'media files',
                'db_table': 'articles_article_mediafilecontent',
                'verbose_name': 'media file',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='RichTextContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('text', feincms.contrib.richtext.RichTextField(blank=True, verbose_name='text')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='richtextcontent_set', to='articles.Article')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'rich texts',
                'db_table': 'articles_article_richtextcontent',
                'verbose_name': 'rich text',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='VideoContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.URLField(help_text='This should be a link to a youtube or vimeo video, i.e.: http://www.youtube.com/watch?v=zmj1rpzDRZ0', verbose_name='video link')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videocontent_set', to='articles.Article')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'videos',
                'db_table': 'articles_article_videocontent',
                'verbose_name': 'video',
                'permissions': [],
            },
        ),
    ]
